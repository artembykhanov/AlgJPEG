function [ img_out ] = Up_sample( img, flag )
% Функция Up_sample выполняет повышение разрешения изображения
% img: входное изображение
% flag: флаг определяет направление увеличения разрешения
%       0 - увеличение размера в строках
%       1 - увеличение размера в столбцах
%       2 - увеличение размера в строках и столбцах

siz = size (img);
if (length(siz) == 2)
    siz(3) = 1; % Если изображение черно-белое, добавляем третье измерение
end

%% Увеличение размера в строках (ближайший сосед)
if (flag == 0 )
    % img_out = zeros(2*siz(1), siz(2), siz(3));
    % img_out(1:2:2*siz(1), :, :) = img;
    % Происходит увеличение размера изображения вдвое по вертикали
    % (каждая строка дублируется)
    img_out = zeros(2*siz(1), siz(2), siz(3));
    img_out(1:2:2*siz(1), :, :) = img;
end

%% Увеличение размера в столбцах (ближайший сосед)
if (flag == 1 )
    % img_out = zeros(siz(1), 2*siz(2), siz(3));
    % img_out(:, 1:2:2*siz(2), :) = img;
    % Происходит увеличение размера изображения вдвое по горизонтали
    % (каждый столбец дублируется)
    img_out = zeros(siz(1), 2*siz(2), siz(3));
    img_out(:, 1:2:2*siz(2), :) = img;
end

%% Увеличение размера в строках и столбцах (ближайший сосед)
if (flag == 2 )
    % siz_new = 2.*siz;
    % rowIndex = min(round(((1:siz_new(1))-0.5)./2+0.5),siz(1));
    % colIndex = min(round(((1:siz_new(2))-0.5)./2+0.5),siz(2));
    % img_out = img(rowIndex,colIndex,:);
    % Происходит увеличение размера изображения вдвое по обеим осям
    % (каждая строка и столбец дублируются)
    siz_new = 2.*siz;
    rowIndex = min(round(((1:siz_new(1))-0.5)./2+0.5),siz(1));
    colIndex = min(round(((1:siz_new(2))-0.5)./2+0.5),siz(2));
    img_out = img(rowIndex,colIndex,:);
end

end
