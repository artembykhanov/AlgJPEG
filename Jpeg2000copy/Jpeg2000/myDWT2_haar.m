function [ img_scaled, img_H_wave, img_V_wave, img_D_wave ] = myDWT2_haar( img )
% Функция myDWT2_haar выполняет двумерное дискретное вейвлет-преобразование Хаара
% img: входное изображение
% img_scaled: коэффициенты аппроксимации
% img_H_wave: горизонтальные коэффициенты вейвлета
% img_V_wave: вертикальные коэффициенты вейвлета
% img_D_wave: диагональные коэффициенты вейвлета

% Выполнение одномерного дискретного вейвлет-преобразования Хаара по строкам и столбцам
[ img_scal, img_wave ] = dwt_haar( img );

% Уменьшение размера взвешенных значений и коэффициентов вейвлета
flag = 1; % Флаг для выбора направления уменьшения размера (по столбцам)
img_out_scal = Down_sample( img_scal , flag ); % Уменьшение размера аппроксимации
img_out_wave = Down_sample( img_wave , flag ); % Уменьшение размера коэффициентов вейвлета

flag = 0; % Флаг для выбора направления уменьшения размера (по строкам)
img_out_scal = img_out_scal'; % Транспонирование для подготовки к уменьшению размера по строкам
[ img_scal, img_wave ] = dwt_haar( img_out_scal ); % Выполнение вейвлет-преобразования на уменьшенных данных
img_scal = img_scal'; % Транспонирование обратно
img_wave = img_wave'; % Транспонирование обратно
img_scaled = Down_sample( img_scal , flag ); % Уменьшение размера аппроксимации
img_H_wave = Down_sample( img_wave , flag ); % Уменьшение размера горизонтальных коэффициентов вейвлета

img_out_wave = img_out_wave'; % Транспонирование для подготовки к уменьшению размера по строкам
[ img_scal, img_wave ] = dwt_haar( img_out_wave ); % Выполнение вейвлет-преобразования на уменьшенных данных
img_scal = img_scal'; % Транспонирование обратно
img_wave = img_wave'; % Транспонирование обратно
img_V_wave = Down_sample( img_scal , flag ); % Уменьшение размера вертикальных коэффициентов вейвлета
img_D_wave = Down_sample( img_wave , flag ); % Уменьшение размера диагональных коэффициентов вейвлета

end
